pipeline {
    agent {
        docker {
            image 'abhishekf5/maven-abhishek-docker-agent:v1'
            args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
        }
    }

    environment {
        SCANNER_HOME = tool 'sonar-scanner'
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
                sh 'echo "Repository checked out"'
            }
        }

        stage('Build and Test') {
            steps {
                sh 'ls -ltr'
                sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
            }
        }

        stage('Sonar Qube Analysis') {
            steps {
                dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
                    withSonarQubeEnv('sonar-server') {
                        script {
                            def javaBinariesPath = './target/classes'
                            sh """$SCANNER_HOME/bin/sonar-scanner \
                                -Dsonar.projectName=springfest \
                                -Dsonar.projectKey=springfest \
                                -Dsonar.java.binaries=$javaBinariesPath
                            """
                        }
                    }
                }
            }
        }
    }
}
